<PropertyList>

<path>interior.ac</path>




<effect>
    <inherits-from>Aircraft/followme_e-tron/Models/Effects/interior</inherits-from>
    <object-name>Mesh63</object-name>
    <object-name>Mesh64</object-name>
    <object-name>Mesh68</object-name>
    <object-name>Mesh69</object-name>
</effect>



<!-- STEERINGWHEEL -->

<animation>
 <type>rotate</type>
 <object-name>steeringwheel</object-name>
 <property>sim/multiplay/generic/float[18]</property>
 <factor>-1</factor>
 <center>
  <x-m> 1.50</x-m>
  <y-m>-0.33</y-m>
  <z-m> 0.97</z-m>
 </center>
 <axis>
  <x1-m>0.98</x1-m>
  <y1-m>-0.33</y1-m>
  <z1-m>0.72</z1-m>
  <x2-m>2.00</x2-m>
  <y2-m>-0.33</y2-m>
  <z2-m>1.20</z2-m>
 </axis>
</animation>


<!--  Engine Starter  -->

<animation>
  <type>pick</type>
  <object-name>starter</object-name>
  <visible>true</visible>
  <action>
    <button>0</button>
    <repeatable>false</repeatable>
    <binding>
      <command>nasal</command>
      <script>engine.toggleEngine(engine.engine_1)</script>
    </binding>
  </action>
</animation>


<!-- GEAR HANDLE -->
<animation>
    <type>pick</type>
    <object-name>gearbox</object-name>
    <action>
      <button>0</button>
      <binding>
          <command>nasal</command>
          <script>engine.engine_1.toggleDirection();</script>
      </binding>
    </action>
</animation>
<animation>
		<type>pick</type>
		<object-name>autohold_switch</object-name>
		<action>
			<button>0</button>
			<repeatable>false</repeatable>
			<binding>
				<command>nasal</command>
				<script>autohold.toggleAutoHold()</script>
			</binding>
		</action>
</animation>
<animation>
    <type>material</type>
    <object-name>autohold_switch</object-name>
    <condition>
	       <equals>
		             <property>sim/multiplay/generic/bool[2]</property>
	                 <value>1</value>
	       </equals>
    </condition>
    <texture>autohold_switch_LIT.png</texture>
</animation>
<animation>
     <type>material</type>
     <object-name>autohold_switch</object-name>
     <condition>
         <equals>
	 	     <property>sim/multiplay/generic/bool[2]</property>
	 	     <value>0</value>
	     </equals>
     </condition>
     <texture>autohold_switch.png</texture>
</animation>

<animation>
     <type>material</type>
     <object-name>autohold_LIT</object-name>
     <condition>
         <equals>
	 	     <property>sim/multiplay/generic/bool[3]</property>
	 	     <value>1</value>
	     </equals>
     </condition>
     <texture>autohold_LIT.png</texture>
</animation>
<animation>
     <type>material</type>
     <object-name>autohold_LIT</object-name>
     <condition>
         <equals>
	 	     <property>sim/multiplay/generic/bool[3]</property>
	 	     <value>0</value>
	     </equals>
     </condition>
     <texture>panel_black.png</texture>
</animation>


<!-- Hand brake -->
<effect>
    <inherits-from>Aircraft/followme_e-tron/Models/parkingbrake</inherits-from>
    <object-name>handbrake.001</object-name>
</effect>
<animation>
		<type>pick</type>
		<object-name>handbrake.001</object-name>
		<action>
			<button>0</button>
			<repeatable>false</repeatable>
			<binding>
				<command>nasal</command>
				<script>followme.toggleHandBrake()</script>
			</binding>
		</action>
</animation>

<!--Fire extingusher - filp vehicle-->
<animation>
		<type>pick</type>
		<object-name>fire</object-name>
		<action>
			<button>0</button>
			<repeatable>false</repeatable>
            <binding>
                <command>property-assign</command>
                <property>/orientation/roll-deg</property>
                <value>0</value>
            </binding>
            <binding>
                <command>property-assign</command>
                <property>velocities/groundspeed-kt</property>
                <value>0</value>
            </binding>
		</action>
</animation>



<!-- Headlight -->
<animation>
     <type>material</type>
     <object-name>headlight_LIT</object-name>
     <condition>
         <equals>
	 	     <property>sim/multiplay/generic/int[3]</property>
	 	     <value>1</value>
	     </equals>
     </condition>
     <texture>headlight_LIT.png</texture>
</animation>
<animation>
     <type>material</type>
     <object-name>headlight_LIT</object-name>
     <condition>
         <equals>
	 	     <property>sim/multiplay/generic/int[3]</property>
	 	     <value>0</value>
	     </equals>
     </condition>
     <texture>panel_black.png</texture>
</animation>

<!-- HighBeam -->
<animation>
     <type>material</type>
     <object-name>longheadlight_LIT</object-name>
     <condition>
         <equals>
	 	     <property>sim/multiplay/generic/bool[5]</property>
	 	     <value>1</value>
	     </equals>
     </condition>
     <texture>longheadlight_LIT.png</texture>
</animation>
<animation>
     <type>material</type>
     <object-name>longheadlight_LIT</object-name>
     <condition>
         <equals>
	 	     <property>sim/multiplay/generic/bool[5]</property>
	 	     <value>0</value>
	     </equals>
     </condition>
     <texture>panel_black.png</texture>
</animation>

<!-- Indicator -->
<animation>
 <type>material</type>
 <object-name>inside_indicater_left</object-name>
 <emission>
  <red>0.33</red>
  <green>1.0</green>
  <blue>0</blue>
  <factor-prop>sim/multiplay/generic/int[0]</factor-prop>
 </emission>
</animation>
<animation>
 <type>material</type>
 <object-name>inside_indicater_right</object-name>
 <emission>
  <red>0.33</red>
  <green>1.0</green>
  <blue>0</blue>
  <factor-prop>sim/multiplay/generic/int[1]</factor-prop>
 </emission>
</animation>
<animation>
		<type>pick</type>
		<object-name>doubleflash</object-name>
		<action>
			<button>0</button>
			<repeatable>false</repeatable>
			<binding>
				<command>nasal</command>
				<script>followme.indicatorController.hazardLights_toggle()</script>
			</binding>
		</action>
</animation>
<animation>
 <type>material</type>
 <object-name>doubleflash</object-name>
 <condition>
     <and>
        <equals>
                  <property>sim/multiplay/generic/int[0]</property>
                  <value>1</value>
        </equals>
        <equals>
                  <property>sim/multiplay/generic/int[1]</property>
                  <value>1</value>
        </equals>
    </and>
 </condition>
 <emission>
  <red>0.1</red>
  <green>0</green>
  <blue>0</blue>
  <factor-prop>sim/multiplay/generic/int[1]</factor-prop>
 </emission>
</animation>

<!-- Accelerator -->
<animation>
  <type>translate</type>
  <object-name>accelerator</object-name>
  <property>sim/multiplay/generic/float[22]</property>
  <factor> 0.05 </factor>
  <axis>
    <x>  -1 </x>
    <y>  0 </y>
    <z>  0 </z>
  </axis>
</animation>
<!-- Brake pedal -->
<animation>
  <type>translate</type>
  <object-name>brake</object-name>
  <property>sim/multiplay/generic/float[25]</property>
  <factor> 0.03 </factor>
  <axis>
    <x>  -1 </x>
    <y>  0 </y>
    <z>  0 </z>
  </axis>
</animation>
</PropertyList>
